---
stages:
  - linting
  - build
  - test
  - build-image


yamllint:
  stage: linting
  image: pipelinecomponents/yamllint:latest
  script:
    - yamllint .
  allow_failure: true

shelllint:
  stage: linting
  image: koalaman/shellcheck-alpine:latest
  before_script:
    - apk update
    - apk add git
  script:
    - git ls-files --exclude='*.sh' --ignored | xargs shellcheck
  allow_failure: true

jsonlint:
  stage: linting
  image: pipelinecomponents/jsonlint:latest
  script:
    - |
      find . -not -path './.git/*' -name '*.json' -type f -print0 |
      parallel --will-cite -k -0 -n1 jsonlint -q
  allow_failure: true

ansibleLint:
  image: georgiapipeline/georgia-pipeline-ansible-slim
  stage: linting
  before_script:
    - ansible --version
    - ansible-lint --version
  script:
    - ansible-lint -x 703,701 images/capi/ansible/node.yml images/capi/ansible/haproxy.yml
  allow_failure: true

docker-build-image:
  # Official docker image.
  image: docker:latest
  stage: build-image
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE"  . --build-arg https_proxy=http://proxy.devops.telekom.de:3128 --build-arg http_proxy=http://proxy.devops.telekom.de:3128
    - docker push "$CI_REGISTRY_IMAGE"
    - docker save "$CI_REGISTRY_IMAGE" -o "$CI_PROJECT_TITLE".tar.gz
  when: manual
  needs: []

build-ubuntu-18.04-1.19.6:
  when: manual
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - JOS-2011
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_reftmdc packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.19.6.json packer/ova/ubuntu-1804-telekom.json" make build-node-ova-vsphere-ubuntu-1804
  artifacts:
    when: always
    paths:
      - ./**/packer.log

build-ubuntu-18.04-1.20.1:
  when: manual
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - JOS-2011
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_reftmdc packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.20.1.json packer/ova/ubuntu-1804-telekom.json" make build-node-ova-vsphere-ubuntu-1804
  artifacts:
    when: always
    paths:
      - ./**/packer.log

build-ubuntu-20.04-1.19.6:
  when: manual
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - JOS-2011
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_reftmdc packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.19.6.json packer/ova/ubuntu-2004-telekom.json" make build-node-ova-vsphere-ubuntu-1804
  artifacts:
    when: always
    paths:
      - ./**/packer.log

packer-build-ubuntu-18.04-1.19.6:
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - packet
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_packet packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.19.6.json packer/ova/ubuntu-1804-telekom.json" make build-node-ova-vsphere-ubuntu-1804
  artifacts:
    when: always
    paths:
      - ./**/packer.log

packer-build-ubuntu-20.04-1.19.6:
  when: manual
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - packet
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_packet packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.19.6.json packer/ova/ubuntu-2004-telekom.json" make build-node-ova-vsphere-ubuntu-1804
  artifacts:
    when: always
    paths:
      - ./**/packer.log

packer-build-ubuntu-18.04-1.20.1:
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - packet
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_packet packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.20.1.json packer/ova/ubuntu-1804-telekom.json" make build-node-ova-vsphere-ubuntu-1804
    - ls output
  artifacts:
    when: always
    paths:
      - ./**/packer.log

packer-build-ubuntu-20.04-1.20.1:
  when: manual
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - packet
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_packet packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.20.1.json packer/ova/ubuntu-2004-telekom.json" make build-node-ova-vsphere-ubuntu-1804
  artifacts:
    when: always
    paths:
      - ./**/packer.log

packer-build-centos-7-1.19.6:
  when: manual
  variables:
    PACKER_LOG_PATH: "packer.log"
    PACKER_LOG: "1"
  tags: 
    - docker
    - packet
  image: 
    name: registry.devops.telekom.de/t-dci-image-building/schiff-image-builder:latest
    entrypoint: [""]
  stage: build
  script:
    - env
    - cd images/capi/
    - make deps-ova
    - PACKER_VAR_FILES="$vsphere_packet packer/config/containerd-1.4.3.json packer/config/kubernetes-v1.19.6.json " make build-node-ova-vsphere-centos-7
  artifacts:
    when: always
    paths:
      - ./**/packer.log
